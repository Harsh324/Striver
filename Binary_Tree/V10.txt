** Iterative Preorder Traversal of Binary Tree

    ** Order is (Root, Left, Right)

    ** Stack (LIFO) Data structure is used 

    ** Implementation based on Stack Data Structure

        vector<int> iter_preorder(Node* Tree)
        {
            vector<int> Res;

            if(NULL == Tree)
                return Res;
            
            stack<Node*> St;
            St.push(Tree);

            while(St.empty() != true)
            {
                Tree = St.top();
                St.pop();
                Res.push_back(Tree->data);

                if(NULL == Tree->right)
                    St.push(Tree->right);
                
                if(NULL == Tree->left)
                    St.push(Tree->left);
            }
            return Res;
        }

        Time Complextiy : O(N), Where N is number of nodes in the Binary Tree
        Auxillary space : O(N), Where N is number of nodes in the Binary Tree

